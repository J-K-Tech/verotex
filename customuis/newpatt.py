# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'customuis/newpatt.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
import sys

class line():
    def __init__(self,points,device):
        self.points = points
        self.dev = device
    def draw(self):
        a = None
        for i in self.points:
            if a == None:
                a = i
            else:
                inputs = i,a
                self.dev.trigger(inputs)
    def update(self):
        a = None
        for i in self.points:
            i.update()
            if a == None:
                a = i
            else:
                
                inputs = i,a
                self.dev.trigger(inputs)


                



class advpoint(QtCore.QPoint):
    def __init__(self):
        super(QtCore.QPoint,self).__init__()
        
        
class advpointwid(QtWidgets.QWidget):
    def __init__(self,xy,editor):
        super(QtWidgets.QWidget,self).__init__(editor)
        hexx = str(editor.hex)
        print(hexx)
        self.setAttribute(QtCore.Qt.WA_StyledBackground, True)
        self.setStyleSheet("background-color:"+"'#"+hexx+"';")
        self.setFixedSize(5,5)
        self.cursor_pix = QtGui.QPixmap('cursor.png')
        self.cursor_pix = QtGui.QCursor(self.cursor_pix, -10,-10)
        self.setCursor(self.cursor_pix)
        self.point = advpoint()
        x,y = xy
        self.move(x,y)
        self.color = hexx
        self.clicked = 0
        self.qTimer = QTimer()
        self.qTimer.setInterval(10)
        self.qTimer.timeout.connect(self.update)
        self.qTimer.start()
        
    def update(self):
        self.point.setX(self.x())
        self.point.setY(self.y())
        self.qTimer.start()
    def mousePressEvent(self,event):
        self.clicked = 1
        self.oldPos = event.globalPos()
    def mouseMoveEvent(self, event):
        if self.clicked == 1:
            delta = QPoint (event.globalPos() - self.oldPos)
            self.move(self.x() + delta.x(), self.y() + delta.y())
            self.oldPos = event.globalPos()
    def mouseReleaseEvent(self,event):
        self.clicked = 0
class patternn(QtWidgets.QWidget):
    def __init__(self,editor):
        super(QtWidgets.QWidget,self).__init__(None)
        self.setAttribute(QtCore.Qt.WA_StyledBackground, True)
        self.setCursor(QtCore.Qt.CrossCursor)

        self.setStyleSheet("background-image: url(checker.jpg);")
        self.setMouseTracking(True)
        self.mx = 0
        self.my = 0
        self.lines = []
        self.points = []
        self.editor = editor
        self.inputs = []
    def mouseMoveEvent(self,event):
        pos = event.pos()
        self.mx = pos.x()
        self.my = pos.y()
    def update (self):
        for i in self.lines:
            i.update()

    def mousePressEvent(self,event):
        if event.buttons() == Qt.LeftButton:
            posy = self.pos()
            xy = self.mx+posy.x()-2,self.my+posy.y()-2
            print(xy)
            point = advpointwid(xy,self.editor)
            point.show()
            self.points.append(point)
        if event.buttons() == Qt.RightButton and self.points != []:
            
            linee = line(self.points,self)
            self.points = []
            self.lines.append(linee)
            linee.draw()
    
    def trigger(self,inputs):
        self.inputs = inputs
    def paintEvent(self,event):
        if self.inputs != []:
            i,a = self.inputs
            c2 = a.color
            c1 = i.color
            gradient = QtGui.QLinearGradient(QPoint(i.x()-self.x(),i.y()-self.y()),QPoint(a.x()-self.x(),a.y()-self.y()))
            gradient.setColorAt(0,QtGui.QColor('#'+c1))
            gradient.setColorAt(1,QtGui.QColor('#'+c2))
            brush = QtGui.QBrush(gradient)
            paint = QtGui.QPainter()
            paint.begin(self)
            pen = QtGui.QPen()
            pen.setBrush(brush)
            pen.setWidth(2)
            pen.setStyle(Qt.SolidLine)
            paint.setPen(pen)
            paint.setBrush(brush)
            paint.drawLine(QPoint(i.x()-self.x(),i.y()-self.y()),QPoint(a.x()-self.x(),a.y()-self.y()))
            paint.end()

        
    


class csden(QtWidgets.QMainWindow):
    def __init__(self):
        super(QtWidgets.QMainWindow,self).__init__()
        self.setStyleSheet('background-color: rgb(30,30,30);\ncolor: rgb(30,30,30)')
        self.setWindowFlags(QtCore.Qt.FramelessWindowHint)
        self.center


        self.show()
        self.clicked = False

    def center(self):
        qr = self.frameGeometry()
        cp = QtWidgets.QDesktopWidget().availableGeometry().center()
        qr.moveCenter(cp)
        self.move(qr.topLeft())
    def mousePressEvent(self, event):
        self.oldPos = event.globalPos()
    def mouseMoveEvent(self, event):
        delta = QPoint (event.globalPos() - self.oldPos)
        self.move(self.x() + delta.x(), self.y() + delta.y())
        self.oldPos = event.globalPos()

class Ui_Form(object):
    def __init__(self):
        self.hh = 0
        self.ww = 0
    def setupUi(self,par,import1):
        self.Form = csden()
        self.Form.setWindowFlags(QtCore.Qt.FramelessWindowHint)
        self.Form.setObjectName("Form")
        self.Form.resize(440, 130)
        self.Form.setStyleSheet("background-color: rgb(30, 30, 30);")
        self.Form.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedStates))
        self.line = QtWidgets.QFrame(self.Form)
        self.line.setGeometry(QtCore.QRect(140, 2, 281, 20))
        self.line.setStyleSheet("background-color: none;")
        self.line.setFrameShadow(QtWidgets.QFrame.Raised)
        self.line.setLineWidth(3)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setObjectName("line")
        self.line_2 = QtWidgets.QFrame(self.Form)
        self.line_2.setGeometry(QtCore.QRect(0, 2, 31, 20))
        self.line_2.setStyleSheet("background-color: none;")
        self.line_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.line_2.setLineWidth(3)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setObjectName("line_2")
        self.label = QtWidgets.QLabel(self.Form)
        self.label.setGeometry(QtCore.QRect(40, 2, 91, 16))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(201, 255, 208))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 30, 30))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 30, 30))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 30, 30))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(201, 255, 208))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 30, 30))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 30, 30))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 30, 30))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 30, 30))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 30, 30))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(30, 30, 30))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.label.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.Form)
        self.label_2.setGeometry(QtCore.QRect(19, 33, 41, 16))
        self.label_2.setStyleSheet("color : #c9ffd0")
        self.label_2.setObjectName("label_2")
        self.lineEdit = QtWidgets.QLineEdit(self.Form)
        self.lineEdit.setGeometry(QtCore.QRect(70, 30, 361, 22))
        self.lineEdit.setStyleSheet("color: #c9ffd0")
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton = QtWidgets.QPushButton(self.Form)
        self.pushButton.setGeometry(QtCore.QRect(415, 0, 25, 25))
        self.pushButton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("customuis\\../exitico.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton.setIcon(icon)
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.jusclose)
        self.pushButton_2 = QtWidgets.QPushButton(self.Form)
        self.pushButton_2.setGeometry(QtCore.QRect(408, 102, 31, 28))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("color: #c9ffd0")
        self.pushButton_2.setObjectName("pushButton_2")
        self.label_3 = QtWidgets.QLabel(self.Form)
        self.label_3.setGeometry(QtCore.QRect(16, 70, 41, 16))
        self.label_3.setStyleSheet("color : #c9ffd0")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.Form)
        self.label_4.setGeometry(QtCore.QRect(230, 70, 41, 16))
        self.label_4.setStyleSheet("color : #c9ffd0")
        self.label_4.setObjectName("label_4")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.Form)
        self.lineEdit_2.setGeometry(QtCore.QRect(70, 67, 151, 22))
        self.lineEdit_2.setStyleSheet("color: #c9ffd0")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_2.setInputMask('0000')
        self.lineEdit_3 = QtWidgets.QLineEdit(self.Form)
        self.lineEdit_3.setGeometry(QtCore.QRect(280, 67, 151, 22))
        self.lineEdit_3.setStyleSheet("color: #c9ffd0")
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_3.setInputMask('0000')

        self.retranslateUi()
        self.clicked = False
        QtCore.QMetaObject.connectSlotsByName(self.Form)
        self.pushButton_2.clicked.connect(lambda: self.okie(par,import1))

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.Form.setWindowTitle(_translate("Form", "Form"))
        self.label.setText(_translate("Form", "New pattern"))
        self.label_2.setText(_translate("Form", "name:"))
        self.pushButton_2.setText(_translate("Form", "OK"))
        self.label_3.setText(_translate("Form", "height:"))
        self.label_4.setText(_translate("Form", "width:"))
    def okie(self,par:QtWidgets.QWidget,import1):
        a = False
        self.name = self.lineEdit.text()
        if self.lineEdit_2.text() != '' and self.lineEdit_3.text() != '':
            self.ww = int(self.lineEdit_2.text())
            self.hh = int(self.lineEdit_3.text())
            print(self.ww,self.hh)
            if self.ww >0 and self.hh>0:
                a = True
            if self.name != '' and a == True:
                self.named = self.name
                patt = patternn(par)
                patt.setFixedSize(self.ww,self.hh)
                patt.setMinimumSize(self.ww,self.hh)
                par.setMinimumSize(self.ww+3,self.hh+3)
                self.Form.close()
                pattern = import1()
                pattern.keySequenceEdit_7.setText(self.name)
                pattern.setTitle(self.name)
                pattern.setParent(par.patternwin)
                pattern.keySequenceEdit_8.setText(str(self.ww))
                pattern.keySequenceEdit_9.setText(str(self.hh))
                pattern.move((par.patternamm-1)*200,par.patternrow*250)
                if par.patternrow == 0:
                    par.patternwin.setFixedSize(par.patternamm*200,(par.patternrow+1)*250)
                else:
                    par.patternwin.setFixedSize(2000,(par.patternrow+1)*250)
                par.patternamm += 1
                if par.patternamm == 11:
                    par.patternamm = 1
                    par.patternrow += 1
                
                par.layout.addWidget(patt)
                
                
            else:pass
    def jusclose(self):
        self.Form.close()
        
    def pop(self,par,import1):
        self.setupUi(par,import1)
        self.Form.show()




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ui = Ui_Form()
    ui.pop()
    sys.exit(app.exec_())
